#!/bin/sh
# Copyright 1999-2003 Gentoo Technologies, Inc.
# Distributed under the terms of the GNU General Public License v2
# $Header$
# Author: Karl Trygve Kalleberg <karltk@gentoo.org>
# Rewritten from the old, Perl-based emerge-webrsync script

GENTOO_MIRRORS="$(/usr/lib/portage/bin/portageq gentoo_mirrors)"
PORTDIR="$(/usr/lib/portage/bin/portageq portdir)"
FETCHCOMMAND="$(/usr/lib/portage/bin/portageq envvar FETCHCOMMAND)"
USERLAND="$(/usr/lib/portage/bin/portageq envvar USERLAND)"
DISTDIR="/var/tmp/emerge-webrsync"

if [ ! -d $DISTDIR ] ; then
	mkdir -p $DISTDIR
fi

cd "$DISTDIR"

found=0
attempts=0
download=1
if [ "$1" == "-v" ] ; then
	wgetops=
else	
	#this sucks.  probably better to do 1> /dev/null
	#that said, waiting on the refactoring.
	if [ "${FETCHCOMMAND/wget}" != "${FETCHCOMMAND}" ]; then
		wgetops="-q"
	elif [ "${FETCHCOMMAND/curl}" != "${FETCHCOMMAND}" ]; then
		wgetops="-s -f"
	fi
fi

if [ "$1" == "-n" ] ; then
	download=0
fi

sync_local() {
	echo Syncing local tree...
	tar jxf $FILE
	rm -f $FILE
	# Make sure user and group file ownership is root
	chown -R 0:0 portage
	cd portage
	rsync -av --progress --stats --delete --delete-after \
	--exclude='distfiles/*' --exclude='packages/*' . ${PORTDIR%%/}
	cd ..
	echo "cleaning up"
	rm -rf portage
	echo "transferring metadata/cache"
	emerge metadata
}

echo "Fetching most recent snapshot"

while (( $attempts <  40 )) ; do

	#this too, sucks.  it works in the interim though.
	if [ "$USERLAND" == "BSD" ] ; then
		daysbefore=$(expr $(date +"%s") - 86400 \* $attempts)
		day=$(date -r $daysbefore +"%d")
		month=$(date -r $daysbefore +"%m")
		year=$(date -r $daysbefore +"%Y")
	else
		day=$(date -d "-$attempts day" +"%d")
		month=$(date -d "-$attempts day" +"%m")
		year=$(date -d "-$attempts day" +"%Y")
	fi

	FILE="portage-${year}${month}${day}.tar.bz2"

	if [ -f "$FILE" ] && [ $download == 0 ] ; then
		sync_local
		exit 0
	fi

	for i in $GENTOO_MIRRORS ; do 
		URI="${i}/snapshots/$FILE"
		rm -f "$FILE"
		
		if (eval "$FETCHCOMMAND $wgetops") && [ -s "$FILE" ]; then
			sync_local
			echo
			echo " *** Completed websync, please now perform a normal rsync if possible."
			echo "     Update is current as of the of YYYYMMDD: ${year}${month}${day}"
			echo
			exit 0
		fi
	done
	attempts=$[attempts+1]
done

rm -rf portage

exit 1
