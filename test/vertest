#!/usr/bin/env python

import portage
import sys
import sys
import commands
import popen2


# eliminate duplicates
def uniq(list):
    list.sort()
    old = ''
    tmp = []
    for x in list:
	if x != old:
	    tmp += [x]
	    old = x
    return tmp


cmd = "/bin/ls /usr/portage/*/*/*.ebuild | cut -d/ -f 6- | sed 's:.ebuild$::'"
cmd += r"|sed -e 's:-r[0-9]$::' -e 's:\(.*\)-\([^-]*\):\1 \2:' | sort"

# get list of all used version pairs
def get_versions():

    # this will get a list of "pkg_name version"
    res = commands.getoutput(cmd).split('\n')

    # group by package name
    d = {}
    for p in res:
	if not p.strip():
	    continue
	n,v = p.strip().split()
	d.setdefault(n, []).append(v)

    # for every package with multiple versions available
    # build all possible unordered pairs of versions
    res = []
    for n in d.keys():
	if len(d[n]) > 1:
	    for i in range(len(d[n])-1):
		for j in range(i, len(d[n])):
		    if d[n][i] != d[n][j]:
			res += [[d[n][i], d[n][j]]]
			#res += ["%s %s %s" % (n, d[n][i], d[n][j])]

    return uniq(res)
	
def sign(x):
    if x > 0:
	    return 1
    elif x < 0:
	    return -1
    return 0



def readlist(filename):
    file = open(filename)
    res = file.readlines()
    file.close()
    return [ x.split() for x in res if x]

def writelist(filename, list):
    file = open(filename, "w")
    list = [" ".join(x) for x in list]
    file.write("\n".join(list) + '\n')
    file.close()
    



# runs comparing func on every pair from the list
# returns list of [x,y,sign(foo(x,y))]
def compare(list, func):
    res = []
    for test in list:
	r = func(test[0], test[1])
	if r != - func(test[1], test[0]):
	    print 'ERROR not simmetric:', test
	    sys.exit(1)
	res += [[test[0], test[1], str(sign(r))]]

    return res





if len(sys.argv) != 2:
    print """
Usage:	vertest create|update|verify
create	create vlist
update	update vlist
verify	compare portage results to vlist
compare get a list of pairs from stdin and produce
	results in format of create
    """
    sys.exit(1)
    
p = sys.argv[1]

if p == "create":
    tmp = compare(get_versions(), portage.vercmp)
    writelist("vlist", tmp)

elif p == "update":
    list = readlist("vlist")
    list += compare(get_versions(), portage.vercmp)
    writelist("vlist.new", uniq(list))

elif p == "verify":
    list = readlist("vlist")
    test = [[x,y] for (x,y,z) in list]
    list2 = compare(test, portage.vercmp)
    for i in range(len(list)):
	if list[i][2] != list2[i][2]:
	    print list[i][0], list[i][1], list[i][2], list2[i][2]

elif p == "compare":
    list = sys.stdin.readlines()
    list = [x.strip().split() for x in list if x.strip()]
    list = compare(list, portage.vercmp)
    list = [" ".join(x) for x in list]
    print "\n".join(list)

    


    










