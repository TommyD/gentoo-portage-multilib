.TH emerge "1" "Jan 2002" "portage 1.8.5" 
.SH NAME
emerge \- manual page for the emerge program, the main new and enhanced interface to the Portage system. 
.SH SYNOPSIS
.B emerge
[\fIoptions\fR] [\fIebuildfile\fR | \fItbz2file\fR | \fIpkgdir\fR] ...
.TP
.B emerge 
[\fIoptions\fR] system
.TP
.B emerge 
[\fIoptions\fR] rsync
.TP
.B emerge 
[\fIoptions\fR] update
.SH DESCRIPTION
The emerge program is the main user interface to the portage system. 
It allows the user to install packages (automatically installing any
packages that the desired package depends upon), update the portage 
directory, and update the installed packages.  It can be used to install packages
from source or to install or build binary packages. 
.PP
.SH OPTIONS 
\fIebuildfile\fR
.TP
This must be a valid ebuild script. For further information read ebuild(5).
.TP
\fItbz2file\fR
.TP
This must be a valid .tbz2 file created by either ebuild foo-x.y.z.ebuild package or emerge --buildpkg foo-x.y.z.ebuild. 
.TP
\fIpkgdir\fR
.TP
This must be a valid portage package directory name, such as sys-apps/portage or dev-lang/python.  Note: a trailing slash will be ignored, so shell file completion may be used with impunity.
.TP
\fIsystem\fR
.TP
"emerge system" is the Portage system update command.  When run, it will scan the etc/make.profile/packages file and determine what packages need to be installed so that your system meets the minimum requirements of your current system profile.  Note that this doesn't necessarily bring your system up-to-date at all; instead, it just ensures that you have no missing parts.  For example, if your system profile specifies that you should have sys-apps/iptables installed and you don't, then "emerge system" will install it (the most recent version that matches the profile spec) for you.  It's always a good idea to do an "emerge --pretend system" before an "emerge system", just so you know what emerge is planning to do.  In practice "emerge system" is needed only during the initial Gentoo linux build.  Otherwise "emerge update" should be used instead.
.TP
\fIrsync\fR
.TP
"emerge rsync" initiates an rsync update with cvs.gentoo.org, updating your Portage tree (typically in /usr/portage).  This option will erase any changes that you have made to existing Portage files so be careful.  "emerge --clean rsync" does the same thing as "emerge rsync", but files that no longer exist on our server are removed.
.TP
\fIupdate\fR
.TP
"emerge update" updates the system packages (those listed in /etc/make.profile/packages) to their current versions .  It is always a good idea to perform an "emerge --pretend update" first just so that you know what emerge will be doing.  Adding the --world flag causes emerge to update \fBALL\fR installed packages to their current versions.  
.TP
\fB--help [mode]\fR
display help information for emerge.  Specify "rsync" or "system" for additional info.
.TP
\fB--pretend\fR 
instead of actually performing the merge, simply display what ebuilds and tbz2s *would* have been installed if --pretend weren't used.  Using --pretend is strongly recommended before installing an unfamiliar package.  In the printout, N = new, U = upgrading, R = replacing
.TP
\fB--verbose\fR
Tell emerge to run in verbose mode.  Currently this flag causes emerge to print out GNU info errors, if any.
.TP
\fB--debug\fR 
Tell emerge to run the emerge command in --debug mode.  In this mode the bash build environment will run with the -x option, causing it to output verbose debug information to stdout.  --debug is great for finding bash syntax errors.
.TP
\fB--fetchonly\fR
 Instead of doing any package building, just perform fetches for all packages (main package as well as all dependencies.)
.TP
\fB--onlydeps\fR
Only merge (or pretend to merge) the dependencies of the specified packages, not the packages themselves.
.TP
\fB--noreplace\fR
Skip the packages specified on the command-line that have already been installed.  Without this option, any packages, ebuilds, or deps you specify on on the command-line *will* cause Portage to remerge the package, even if it is already installed. Note that Portage will never remerge dependencies automatically.
.TP
\fB--autoclean\fR
emerge normally cleans out the package-specific temporary build directory before it starts the building a package.  With --autoclean, it will also clean the directory *after* the build completes.  This option is automatically enabled for normal users, but maintainers can use this option to enable autocleaning.
.TP
\fB--usepkg\fR 
tell emerge to use binary packages (from $DISTDIR) if they are available, thus possibly avoiding some time-consuming compiles. This option is useful for CD installs; you can export DISTDIR=/mnt/cdrom/packages and then use this option to have emerge "pull" binary packages from the CD in order to satisfy dependencies.
.TP
\fB--buildpkg\fR
tell emerge to build binary packages for all ebuilds processed (in addition to actually merging the packages.  Useful for maintainers or if you administrate multiple Gentoo Linux systems (build once, emerge tbz2s everywhere).  The package will be created in the \fI${PKGDIR}\fR/ALL directory.
.TP
.SH AUTHOR
Achim Gottinger <achim@gentoo.org>
.SH "SEE ALSO"
ebuild(1) ebuild(5) make.defaults(5) make.conf(5)
.TP
The helper apps in \fI/usr/lib/portage/bin\fR.
.SH FILES
\fB/etc/make.conf\fR 
Contains variables for the build-process and 
overwrites those in make.defaults
.TP
\fB/etc/make.profile/make.defaults\fR
Contains the profile dependend variables for the build-process,
you should edit \fI/etc/make.conf\fR instead.
.TP
\fB/etc/make.profile/virtuals\fR 
Contains a list of packages used to resolve virtual dependencies
.TP
\fB/etc/make.profile/package\fR
Contains a list of packages used for the base system
.TP
\fB/etc/make.globals\fR 
Contains the default variables for the build-process, 
you should edit \fI/etc/make.conf\fR instead.
.TP
