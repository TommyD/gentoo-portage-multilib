.TH "emerge" "1" "May 19, 2002" "portage 1.9.11" ""
.SH "NAME"
emerge \- Interface to the Portage system
.SH "SYNOPSIS"
.B emerge
[\fIoptions\fR] [\fIaction\fR] [\fIebuildfile\fR | \fItbz2file\fR] ...
.TP 
.B emerge
[\fIoptions\fR] [\fIaction\fR] system
.TP 
.B emerge
[\fIoptions\fR] [\fIaction\fR] world
.TP 
.B emerge
[\fIoptions\fR] [\fIaction\fR] ebuildfile
.TP 
.B emerge
[\fI\-\-clean \-c\fR] rsync
.TP 
.B emerge
\fI\-\-help \-h\fR
.SH "DESCRIPTION"
The emerge program is the main user interface to the portage system. 
It allows the user to install packages (automatically installing any
packages that the desired package depends upon), update the portage 
directory, and update the installed packages.  It can be used to install packages
from source or to install or build binary packages. 
.PP 
.SH "ACTIONS"
.TP 
\fBebuildfile\fR
This must be a valid portage package directory name, such as sys\-apps/portage or dev\-lang/python.  Note: a trailing slash will be ignored, so shell file completion may be used with impunity. It may contain the category and version number as well.
.br 
	pciutils
.br 
	\\=pciutils\-2.1.9
.br 
	sys\-apps/pciutils
.br 
	\\=sys\-apps/pciutils\-2.1.9
.br 
	/usr/portage/sys\-apps/pciutils\-2.1.9.ebuild
.br 

.br 
\fBImportant Note:\fR under Bash, and many other shells characters such as '>' '<' and '=' must be either escaped (preceded with a backslash '\\') or quoted inside of single (') or double (") quotes to be translated correctly on the command line.
.br 

\fBUSE variables:\fR may be specified on the command line to override those specified per default and those specified in \fB/etc/make.conf\fR, providing a quick way to avoid certain packages having unnecessary dependancies. USE flags specified on the command line \fBare not remembered\fR. World or package updates will build the package with the systems standard USE flags.
.br 
	USE="\-X \-gnome" emerge mc
.TP 
\fBtbz2file\fR
This must be a valid .tbz2 file created by either ebuild foo\-x.y.z.ebuild package or emerge \-\-buildpkg <package> or emerge \-b <package>.
.TP 
\fBsystem\fR
"emerge system" is the Portage system update command.  When run, it will scan the etc/make.profile/packages file and determine what packages need to be installed so that your system meets the minimum requirements of your current system profile.  Note that this doesn't necessarily bring your system up\-to\-date at all; instead, it just ensures that you have no missing parts.  For example, if your system profile specifies that you should have sys\-apps/iptables installed and you don't, then "emerge system" will install it (the most recent version that matches the profile spec) for you.  It's always a good idea to do an "emerge \-\-pretend system" before an "emerge system", just so you know what emerge is planning to do.  In practice "emerge system" is needed only during the initial Gentoo linux build.  Otherwise "emerge \-\-update system" should be used instead.
.TP 
\fBworld\fR
"emerge world" updates all user emerge'd packages and dependancies (those listed in /var/cache/edb/world) to their current versions. Running "emerge world" without specifing "\-\-update" will cause a complete rebuild of all packages, not only the ones that have new versions. It is always a good idea to perform an "emerge \-\-pretend \-\-update world" first just so that you know what emerge will be doing.
.TP 
\fBinject\fR, \fB\-i\fR
"emerge inject package\-version" adds a stub entry for a package so that portage assumes that a package is installed. Provides an easy way to avoid portage merging a dependency that is satisfied by a user\-installed package (a kernel for instance).
.BR 
\fBemerge inject gentoo\-sources\-2.4.19\fR
.TP 
\fBrsync\fR
"emerge rsync" initiates an rsync update with cvs.gentoo.org, updating your Portage tree (typically in /usr/portage).  This option will erase any changes that you have made to existing Portage files so be careful.  "emerge \-\-clean rsync" does the same thing as "emerge rsync", but files that no longer exist on our server are removed.
.TP 
\fB\-\-help\fR, \fB\-h\fR \fB[mode]\fR
display help information for emerge.  Specify "rsync" or "system" for additional info. \fBNOTE: The most up\-to\-date information can be found using this action. Please check any problems against what this action outputs. 'emerge \-\-help | more' may be of assistance.\fR  
.TP 
\fBsearch\fR, \fB\-s\fR \fB [package] [package]\fR
searches for matches of the supplied string in the current local portage tree.  The search string is a regular expression.  Some examples:
.br 
	emerge \-s "^kde"
.br 
		lists all packages starting with kde
.br 
	emerge search "gcc$"
.br 
		list all packages ending with gcc
.br 
	emerge \-s "office"
.br 
		list all packages containing office
.br 
	emerge search ".*"
.br 
		list all available packages
.br 
.TP 
\fBprune\fR, \fB\-P\fR
\fIWARNING: This action can remove packages that are needed for some programs to run. Try 'clean' instead.\fR
Removes all older versions of an installed package from your system. This option may not verify the binary compatibility between versions and can thus remove essential dependencies from your system rendering applications useless. Re\-emerging the broken application should restore them.
.TP 
\fBunmerge\fR, \-C \fB[package] [package]\fR
removes an installed package. the arguments can be in two different formats : /var/db/pkg/category/package\-version or category/package\-version. A few examples of the second format:
.br 
 
.br 
\fBemerge unmerge binutils\fR matches
.br 
	binutils\-2.11.90.0.7 and
.br 
	binutils\-2.11.92.0.12.3\-r1
.br 
 
.br 
\fBemerge unmerge \\>binutils\-2.11.90.0.7\fR
.br 
	binutils\-2.11.92.0.12.3\-r1
.br 
 
.br 
\fBemerge unmerge sys\-devel/binutils\fR
.br 
	binutils\-2.11.90.0.7 and
.br 
	binutils\-2.11.92.0.12.3\-r1
.br 
 
.br 
\fBemerge unmerge sys\-devel/binutils\-2.11.90.0.7\fR
.br 
	binutils\-2.11.90.0.7
.br 
 
.br 
\fBemerge \-C \\>sys\-devel/binutils\-2.11.90.0.7\fR
.br 
	binutils\-2.11.92.0.12.3\-r1
.br 
 
.br 
\fBemerge \-C '>=sys\-devel/binutils\-2.11.90.0.7'\fR
.br 
	binutils\-2.11.90.0.7
.br 
	binutils\-2.11.92.0.12.3\-r1
.br 
 
.br 
\fBemerge \-C '<sys\-devel/binutils\-2.11.92.0.12.3\-r1'\fR
.br 
	binutils\-2.11.90.0.7
.br 
 
.br 
\fBemerge \-C '<=sys\-devel/binutils\-2.11.92.0.12.3\-r1'\fR
.br 
	binutils\-2.11.90.0.7
.br 
	binutils\-2.11.92.0.12.3\-r1
.br 
.SH "OPTIONS "
.TP 
\fB\-\-autoclean\fR, \fB\-a\fR
emerge normally cleans out the package\-specific temporary build directory before it starts the building a package.  With \-\-autoclean, it will also clean the directory *after* the build completes.  This option is automatically enabled for normal users, but maintainers can use this option to enable autocleaning.
.TP 
\fB\-\-buildpkg\fR, \fB\-b\fR
tell emerge to build binary packages for all ebuilds processed (in addition to actually merging the packages.  Useful for maintainers or if you administrate multiple Gentoo Linux systems (build once, emerge tbz2s everywhere).  The package will be created in the \fI${PKGDIR}\fR/All directory.
.TP 
\fB\-\-debug\fR, \fB\-d\fR 
Tell emerge to run the emerge command in \-\-debug mode.  In this mode the bash build environment will run with the \-x option, causing it to output verbose debug information to stdout.  \-\-debug is great for finding bash syntax errors.
.TP 
\fB\-\-emptytree\fR, \fB\-e\fR
Virtually tweaks the tree of installed packages to only contain glibc, this is great to use together with \-\-pretend. This allows developers to get a complete overview of the complete dependency tree of a package, and it enables complete trees to be rebuilt using the latest libraries.
.TP 
\fB\-\-fetchonly\fR, \fB\-f\fR
Instead of doing any package building, just perform fetches for all packages (main package as well as all dependencies.)
.TP 
\fB\-\-nodeps\fR
Try to merge (or pretend to merge) the package specified without any dependencies.
.TP 
\fB\-\-noreplace\fR, \fB\-n\fR
Skip the packages specified on the command\-line that have already been installed.  Without this option, any packages, ebuilds, or deps you specify on on the command\-line *will* cause Portage to remerge the package, even if it is already installed. Note that Portage will never remerge dependencies automatically.
.TP 
\fB\-\-oneshot\fR
Emerge as normal, but do not add the packages to the world profile. Prevents updates when 'emerge \-u world' is preformed.
.TP 
\fB\-\-onlydeps\fR, \fB\-o\fR
Only merge (or pretend to merge) the dependencies of the package specified.
.TP 
\fB\-\-pretend\fR, \fB\-p\fR
instead of actually performing the merge, simply display what *would* have been installed if \-\-pretend weren't used.  Using \-\-pretend is strongly recommended before installing an unfamiliar package.  In the printout, N = new, U = upgrading, R = replacing.
.TP 
\fB\-\-update\fR, \fB\-u\fR
Performs an action only if newer versions of the specified package or dependencies exist. When used in conjunction with "world" it causes all packages that can be updated to be updated.
.TP 
\fB\-\-usepkg\fR, \fB\-k\fR 
tell emerge to use binary packages (from $PKGDIR) if they are available, thus possibly avoiding some time\-consuming compiles. This option is useful for CD installs; you can export PKGDIR=/mnt/cdrom/packages and then use this option to have emerge "pull" binary packages from the CD in order to satisfy dependencies.
.TP 
\fB\-\-verbose\fR, \fB\-v\fR
Tell emerge to run in verbose mode.  Currently this flag causes emerge to print out GNU info errors, if any.
.SH "AUTHORS"
Daniel Robbins <drobbins@gentoo.org>
.br 
Geert Bevin <gbevin@gentoo.org>
.br 
Achim Gottinger <achim@gentoo.org>
.br 
Nicholas Jones <carpaski@twobit.net>
.SH "SEE ALSO"
ebuild(1) ebuild(5) make.defaults(5) make.conf(5)
.br 
pkglist(1) pkgsearch(1) chkcontents(1)
.TP 
The helper apps in \fI/usr/lib/portage/bin\fR.
.TP 
The package gentoolkit contains useful scripts such as qpkg (Query Package) and etc\-update (configuration file updater/merger). See /usr/share/gentoolkit/ after emerge.
.SH "FILES"
.TP 
\fB/etc/make.conf\fR 
Contains variables for the build\-process and overwrites those in make.globals. ONLY EDIT THIS CONFIG FILE.
.TP 
\fB/etc/make.profile/make.defaults\fR
Contains the profile dependend variables for the build\-process, you should edit \fI/etc/make.conf\fR instead.
.TP 
\fB/etc/make.profile/use.defaults\fR 
The USE flags which are enabled by default. Modify USE flags in \fI/etc/make.conf\fR instead.
.TP 
\fB/usr/portage/profiles/use.desc\fR 
Contains the master list of USE flags with description of their function.
.TP 
\fB/etc/make.profile/virtuals\fR 
Contains a list of packages used to resolve virtual dependencies.
.TP 
\fB/etc/make.profile/package\fR
Contains a list of packages used for the base system. Used by 'emerge system'
.TP 
\fB/etc/make.globals\fR 
Contains the default variables for the build\-process, you should edit \fI/etc/make.conf\fR instead.
.TP 
\fB/var/cache/edb/world\fR 
Contains a list of all user specified packages.
