.TH ebuild "07" "October 2002" "portage 2.0.38"
.SH NAME
ebuild \- the internal format, variables and functions in an ebuild script
.SH DESCRIPTION
The
.BR ebuild (1) 
program accepts a single ebuild script as an argument.  This
script contains variables and commands that specify how to download, unpack,
patch, compile, install and merge a particular software package from its original
sources.  In addition to all this, the ebuild script can also contain
pre/post install/remove commands, as required.


.SH EXAMPLES
Here's a simple example ebuild script, :

.DS
# Copyright 1999-2002 Gentoo Technologies, Inc.
.br
# Distributed under the terms of the GNU General Public License, v2 or later
.br
# $Header$
.br

S=${WORKDIR}/${P}
.br
DESCRIPTION="Super-useful stream editor"
.br
SRC_URI="ftp://alpha.gnu.org/pub/gnu/sed/${P}.tar.gz"
.br
HOMEPAGE="http://www.gnu.org/software/sed/sed.html"
.br
KEYWORDS="x86 ppc sparc sparc64 alpha"
.br
SLOT="0"
.br
LICENSE="GPL-2"
.br
IUSE=""
.br

DEPEND="virtual/glibc"
.br
RDEPEND="virtual/glibc"
.br

src_compile() {
   ./configure --prefix=/usr --host=${CHOST} || die "Configure failed"
    emake ${MAKEOPTS} || die "Make Failed"
.br
}

src_install() {
    into /usr
    doinfo doc/sed.info
    doman doc/sed.1
    into /
    dobin sed/sed
    dodir /usr/bin
    dosym /bin/sed /usr/bin/sed
    dodoc COPYING NEWS README* THANKS TODO AUTHORS BUGS ANNOUNCE
.br
}
.DE



.PP
.SH VARIABLES
.TP
\fBP\fR
This variable contains the package name. This variable contains the script
name without the .ebuild extension if not explicit defined in the ebuild
script. Normaly it's safe to leave this undefined.
.TP
\fBPN\fR
Contains the name of the script without the version number.
.TP
\fBPV\fR
Contains the verion number without the revision.
.TP
\fBPR\fR
Contains the revision number or zero if no revision number exists.
.TP
\fBPF\fR
Contains the full package name \fI[PN]-[PV]_r[PR]\fR
.TP
\fBA\fR
Contains all source files required for the package. This variable must no
longer be defined because it gets autogenerated from the \fISRC_URI\fR
variables.
.TP
\fBWORKDIR\fR
Contains the path to the package build root. 
(/var/tmp/portage/[category]/[package]/work). \fIsrc_unpack\fR gets
executed with \fIWORKDIR\fR as the current directory.
.TP
\fBS\fR
Contains the path to the temporary \fIbuild directory\fR. This variable is used by
the functions \fIsrc_compile\fR and \fIsrc_install\fR. Both gets executed
with \fIS\fR as the current directory.
.TP
\fBD\fR
Contains the path to the temporary \fIinstall directory\fR.
(/var/tmp/portage/[category]/[package]/image)
.TP
\fBDESCRIPTION\fR
Should contain a short description of the package.
.TP
\fBSRC_URI\fR
Contains a list of URI's for the required source files. It can contain
multiple URI's for a single source file. The fastest location is choosen
if the file was not found at \fIGENTOO_MIRROR\fB
.TP
\fBHOMEPAGE\fR
Should contain a list of URL's for the sources main sites and other further
package dependend information.
.TP
\fBKEYWORDS\fR
Should contain appropriate list of arches that build is know to work/not work.  
By default if you do not know if a build runs under a particular arch simply omit
that KEYWORD.  If the build will not work on that arch include it as -ppc for example.
.TP
\fBSLOT\fR
This sets the SLOT for pacakges that may need to co-exist.  By default you should set
SLOT="0" unless you know what you are doing and need to do otherwise.
.TP
\fBLICENSE\fR
This should be a space delimited list of licenses that the package falls
under.  This _must_ be set for a matching license in /usr/portage/licenses/.  
If the license does not exist in portage yet you must add it first.
.TP
\fBIUSE\fr
This should be a list of any and all USE falgs that are leveraged within your 
build script.  The only USE flags that should not get listed here are arch 
related flags (currently x86 ppc sparc sparc64 alpha).
.TP
\fBDEPEND\fr
This should conatin a list of all packages that are required for the program to compile.
.TP
\fBRDEPEND\fr
This should contain a list of all packages that are required for this program to run 
(aka runtime depend).
.TP
.PP
.SH FUNCTIONS
.TP
\fBpkg_setup\fR
This function can be used if the package needs specific setup actions or checks
to be preformed before anything else.
.TP
\fBsrc_unpack\fR
This function is used to unpack all the sources in \fIA\fR to \fIWORKDIR\fR.
If not defined in the \fIebuild script\fR it calls
\fIunpack ${A}\fR.
Any patches and other pre configure/compile modifications should be done
here.
.TP
\fBsrc_compile\fR
All necessary steps for configuration and compilation should be done in
here.
.TP
\fBsrc_install\fR
Should contain everything required to install the package in the temporary
\fIinstall directory\fR.
.TP
\fBpkg_preinst pkg_postinst\fR
All modifications required on the live-filesystem before and after the
package gets merged sould be in here.
.TP
\fBpkg_prerm pkg_postrm\fR
Like the inst functions but for unmerge.
.TP
\fBconfig\fR
This function should contain optional basic configuration steps.
.PP
.SH HELPER FUNCTIONS 
.TP
\fBunpack\fR \fI[list of sources] \fB
This function untars a list of sources into the current directory.
.TP
\fBdodir\fR \fI[path]\fR
Creates a directory
.TP
\fBinto\fR \fI[path]\fR
Sets the root (\fIDESTTREE\fR) for other functions like dobin, dosbin, doman, doinfo, dolib.
The default is /usr
.TP
\fBdobin\fR \fI[list of binaries]\fR
Installs a binary or a list of binaries into \fIDESTTREE\fR/bin.
Creates all neccesary dirs.
.TP
\fBdosbin\fR \fI[list of binaries]\fR
Installs a binary or a list of binaries into \fIDESTTREE\fR/sbin.
Creates all neccesary dirs.
.TP
\fBdolib dolib.a dolib.so\fR \fI[list of libraries]\fR
Installs a library or a list of librarys into \fIDESTTREE\fR/lib.
Creates all neccesary dirs.
.TP
\fBdoman\fR \fI[list of man-pages]\fR
Installs a manual-page or a list of info \fIDESTDIR\fR/man/man[1-9]
depending on the manual file ending and creates required dirs.
The files get gzipped if they aren't jet.
.TP
\fBdohard dosym\fR \fI[filename] [linkname] \fR
performs the ln command as either a hard link or symlink.
.TP
\fBdohtml\fR \fI [-a filetypes] [-r] [-x list-of-dirs-to-ignore] [list-of-files-and-dirs]\fR
will install the files in the list of files (space-separated list) into /usr/share/doc/${PF}/html
provided the file ends in .html, .png, .jpg or .css.  Setting -a limits what types of files will
be included, setting -x sets which dirs to exclude (CVS excluded by default), -r sets recursive.
.TP
\fBdoinfo\fR \fI[list of info-files] \fR
Installs a info-page or a list of info \fIDESTDIR\fR/info
creates required dirs. Files gets automatic gzipped.
.TP
\fBdojar\fR \fl[list-of-files] \fR
installs the list of files into /usr/share/${PN}/lib and adds them to /usr/share/${PN}/classpath.env.
.TP
\fBdomo\fR \fI[list of locale-files] \fR
Installs a locale-file or a list of info
\fIDESTDIR\fR/usr/share/locale/[LANG] depending on local-file's ending and
reates required dirs.
.TP
\fBdopython\fR \fI[commands]\fR
performs [commands] with python, returns result
.TP
\fBdosed\fR \fI "s:orig:change:g" [filename] \fR
performs sed (including cp/mv filename) to [filename]
.TP
\fBfowners, fperms\fR \fI[permissions] [files]\fR
perfroms chown (fowners) or chmod (fperms), applying [permissions] to [files]
.TP
\fBinsinto\fR \fI[path]\fR
Sets the root(\fINSDESTTREE\fR) for the doins function.
.TP
\fBdoins\fR \fI[list of files]\fR
Installs a file or a list of files into \fIINSDESTTREE\fR. This function uses
install(1).
.TP
\fBinsopts\fR \fI[options for install(1)]\fR
Can be used to define options for the install founction used in doins. The
default is \fI-m0644\fR.
.TP
\fBexeinto\fR \fI[path}\fR
Sets the root(\fEXEDESTTREE\fR) for the doexe function.
.TP
\fBdoexe\fR \fI[list of executables]\fR
Installs a executable or a list of executable into \fIEXEDESTTREE\fR.
This function uses install(1).
.TP
\fBexeopts\fR \fI[options for install(1)]\fR
Can be used to define options for the install founction used in doexe. The
default is \fI-m0755\fR.
.TP
\fBdocinto\fR \fI[path}\fR
Sets the relative subdir (\fIDOCDESTTREE\fR) used by dodoc.
.TP
\fBdodoc\fR \fI[list of document]\fR
Installs a document or a list of document into /usr/doc/[package]/\fIDOCDESTTREE\fR.
All required dirs gets created and the docs get gzipped.
.TP
\fBnewbin newsbin newlib newlib.so newlib.a newman newinfo newins newexe newdoc\fR \fI[file] [new filename]\fR
All these functions acct like the do* functions, but they only work with one
file and the file gets installed as \fI[new filename]\fR.
.TP
\fBemake, pmake\fR
This is used as a replacement for make.  performs make ${MAKEOPTS}
(as set in /etc/make.globals), default is -j2. **warning** if you are going
to use emake/pmake, make sure your build is happy with paralell makes
(make -j2). It should be tested thoroughly as paralell makes are nutrious
for failing _sometimes_ but not always.
.PP
.SH AUTHORS
Achim Gottinger <achim@gentoo.org>
.br
Mark Guertin <gerk@gentoo.org>
.SH "SEE ALSO"
ebuild(1) make.defaults(5) make.conf(5)
.TP
The \fI/usr/sbin/ebuild\fR script. 
The helper apps in \fI/usr/lib/portage/bin\fR.
.SH FILES
\fB/etc/make.conf\fR 
Contains variables for the build-process and 
overwrites those in make.defaults
.TP
\fB/etc/make.defaults\fR 
Contains the default variables for the build-process, 
you should edit \fI/etc/make.conf\fR instead.
.TP
